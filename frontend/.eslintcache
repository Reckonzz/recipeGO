[{"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\index.js":"1","C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\App.jsx":"4","C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\pages\\landingPage\\landingPage.jsx":"5","C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\pages\\captureScreen\\captureScreen.jsx":"6","C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\pages\\loginPage\\loginPage.jsx":"7"},{"size":841,"mtime":1610814276724,"results":"8","hashOfConfig":"9"},{"size":377,"mtime":1610814276729,"results":"10","hashOfConfig":"9"},{"size":5201,"mtime":1610814276731,"results":"11","hashOfConfig":"9"},{"size":1063,"mtime":1610854110532,"results":"12","hashOfConfig":"9"},{"size":206,"mtime":1610814276727,"results":"13","hashOfConfig":"9"},{"size":4461,"mtime":1610814276726,"results":"14","hashOfConfig":"9"},{"size":3144,"mtime":1610854110540,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1mmw9ws",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\App.jsx",["34"],"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\pages\\landingPage\\landingPage.jsx",[],"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\pages\\captureScreen\\captureScreen.jsx",[],"C:\\Users\\Sofya\\Documents\\recipeGO\\recipeGO\\frontend\\src\\pages\\loginPage\\loginPage.jsx",["35","36","37","38","39","40"],"import React, { useRef, useEffect, useState } from \"react\"\r\nimport \"./loginPage.styles.scss\"\r\n\r\nconst { Component } = React\r\n\r\nclass LoginScreen extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      currentView: \"signUp\"\r\n    }\r\n  }\r\n\r\n  changeView = (view) => {\r\n    this.setState({\r\n      currentView: view\r\n    })\r\n  }\r\n\r\n  currentView = () => {\r\n    switch(this.state.currentView) {\r\n      case \"signUp\":\r\n        return (\r\n          <form>\r\n            <h2>Sign Up!</h2>\r\n            <fieldset>\r\n              <legend>Create Account</legend>\r\n              <ul>\r\n               \r\n                <li>\r\n                  <label for=\"username\">Username:</label>\r\n                  <input type=\"username\" id=\"username\" required/>\r\n                </li>\r\n                <li>\r\n                  <label for=\"password\">Password:</label>\r\n                  <input type=\"password\" id=\"password\" required/>\r\n                </li>\r\n                <li>\r\n                  <label for=\"phonenum\">Phone number:</label>\r\n                  <input type=\"text\" id=\"phonenum\" required/>\r\n                </li>\r\n              </ul>\r\n            </fieldset>\r\n            <button>Submit</button>\r\n            <button type=\"button\" onClick={ () => this.changeView(\"logIn\")}>Have an Account?</button>\r\n          </form>\r\n        )\r\n        break\r\n      case \"logIn\":\r\n        return (\r\n          <form>\r\n            <h2>Welcome Back!</h2>\r\n            <fieldset>\r\n              <legend>Log In</legend>\r\n              <ul>\r\n                <li>\r\n                  <label for=\"phonenum\">Phone number:</label>\r\n                  <input type=\"text\" id=\"phonenum\" required/>\r\n                </li>\r\n                <li>\r\n                  <label for=\"password\">Password:</label>\r\n                  <input type=\"password\" id=\"password\" required/>\r\n                </li>\r\n                <li>\r\n                  <i/>\r\n                  <a onClick={ () => this.changeView(\"PWReset\")} href=\"#\">Forgot Password?</a>\r\n                </li>\r\n              </ul>\r\n            </fieldset>\r\n            <button>Login</button>\r\n            <button type=\"button\" onClick={ () => this.changeView(\"signUp\")}>Create an Account</button>\r\n          </form>\r\n        )\r\n        break\r\n      case \"PWReset\":\r\n        return (\r\n          <form>\r\n          <h2>Reset Password</h2>\r\n          <fieldset>\r\n            <legend>Password Reset</legend>\r\n            <ul>\r\n              <li>\r\n                <em>A reset link will be sent to your phone number!</em>\r\n              </li>\r\n              <li>\r\n                <label for=\"phonenum\">Phone number:</label>\r\n                <input type=\"phonenum\" id=\"phonenum\" required/>\r\n              </li>\r\n            </ul>\r\n          </fieldset>\r\n          <button>Send Reset Link</button>\r\n          <button type=\"button\" onClick={ () => this.changeView(\"logIn\")}>Go Back</button>\r\n        </form>\r\n        )\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"entry-page\">\r\n        {this.currentView()}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginScreen\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":23},{"ruleId":"45","severity":1,"message":"50","line":1,"column":25,"nodeType":"47","messageId":"48","endLine":1,"endColumn":34},{"ruleId":"45","severity":1,"message":"51","line":1,"column":36,"nodeType":"47","messageId":"48","endLine":1,"endColumn":44},{"ruleId":"52","severity":1,"message":"53","line":48,"column":9,"nodeType":"54","messageId":"55","endLine":48,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":66,"column":19,"nodeType":"58","endLine":66,"endColumn":75},{"ruleId":"52","severity":1,"message":"53","line":74,"column":9,"nodeType":"54","messageId":"55","endLine":74,"endColumn":14},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]