[{"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\index.js":"1","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\App.jsx":"4","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\captureScreen\\captureScreen.jsx":"5","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\loginPage\\loginPage.jsx":"6","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\landingPage\\landingPage.jsx":"7","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\generateRecipePage\\generateRecipePage.jsx":"8","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\components\\ingredient\\ingredient.jsx":"9","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\recipesPage\\recipesPage.jsx":"10","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\components\\loader\\loader.jsx":"11"},{"size":841,"mtime":1610892576406,"results":"12","hashOfConfig":"13"},{"size":377,"mtime":1610892576411,"results":"14","hashOfConfig":"13"},{"size":5201,"mtime":1610892576412,"results":"15","hashOfConfig":"13"},{"size":911,"mtime":1610897899886,"results":"16","hashOfConfig":"13"},{"size":9252,"mtime":1610913154637,"results":"17","hashOfConfig":"13"},{"size":4099,"mtime":1610914437021,"results":"18","hashOfConfig":"13"},{"size":206,"mtime":1610892576409,"results":"19","hashOfConfig":"13"},{"size":2250,"mtime":1610893317509,"results":"20","hashOfConfig":"13"},{"size":537,"mtime":1610892576405,"results":"21","hashOfConfig":"13"},{"size":1020,"mtime":1610900424517,"results":"22","hashOfConfig":"13"},{"size":208,"mtime":1610907353466,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6oqya7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\index.js",[],["50","51"],"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\App.jsx",["52","53","54","55"],"import React, {useEffect, useState} from 'react';\r\nimport { \r\n  BrowserRouter as Router, \r\n  Switch,\r\n  Route, \r\n  Redirect,\r\n  Link\r\n} from \"react-router-dom\"\r\n\r\nimport './App.scss';\r\n\r\nimport CaptureScreen from \"./pages/captureScreen/captureScreen\"\r\nimport LoginScreen from \"./pages/loginPage/loginPage\"\r\nimport LandingPage from \"./pages/landingPage/landingPage\"\r\nimport RecipesPage from \"./pages/recipesPage/recipesPage\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n          <Switch>\r\n              <Route path=\"/login\">\r\n                  <LoginScreen/>\r\n                  <button><Link to=\"/capture\">Capture Page</Link></button>\r\n              </Route>\r\n              <Route path=\"/capture\">\r\n                  <CaptureScreen/>\r\n              </Route>\r\n              <Redirect to=\"/login\"/>\r\n          </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\captureScreen\\captureScreen.jsx",["56","57"],"import React, { useRef, useEffect, useState } from \"react\"\r\n\r\nimport \"./captureScreen.styles.scss\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport GenerateRecipePage from \"../generateRecipePage/generateRecipePage\"\r\nimport RecipePage from \"../recipesPage/recipesPage\"\r\nimport Loader from \"../../components/loader/loader\"\r\n\r\nconst CaptureScreen = (props) => {\r\n    const fileReader = useRef(null)\r\n    const [hasVideoAccess, setVideoAccess] = useState(false)\r\n    const [isImageTaken, setImageTaken] = useState(false)\r\n    const [picture, setPicture] = useState('')\r\n    const [ingArr, setIngArr] = useState([\r\n        {\"name\": \"strawberries\"},\r\n        {\"name\": \"cheese\"},\r\n        {\"name\": \"bacon\"}\r\n    ])\r\n    const [hideIngPage, setHideIngPage] = useState(true)\r\n    const [hideRecipePage, setHideRecipePage] = useState(true)\r\n    const [recipes, setRecipes] = useState([])\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if (!('mediaDevices' in navigator)){\r\n            navigator.mediaDevices = {}\r\n        } \r\n        // polyfill for devices that don't support the getUsermedia \r\n        if (!('getUserMedia' in navigator.mediaDevices)){\r\n            navigator.mediaDevices.getUserMedia = constraints => {\r\n                let getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia\r\n                if (!getUserMedia) {\r\n                    return Promise.reject(new Error('getUserMedia is not implemented'))\r\n                }\r\n                return new Promise((resolve, reject) => {\r\n                    getUserMedia.call(navigator, constraints, resolve, reject)\r\n                })\r\n            }\r\n        }\r\n\r\n        //set stream object to video element\r\n        navigator.mediaDevices.getUserMedia({\r\n            video: true,\r\n            audio: false\r\n        }).then(stream => {\r\n            setVideoAccess(true)\r\n            let video = document.querySelector(\".fridge-capture\")\r\n            video.srcObject = stream\r\n            video.addEventListener('loadedmetadata', () => {\r\n                video.play()\r\n            })\r\n            \r\n        })\r\n        let canvas = document.querySelector(\".image-canvas\")\r\n                        // let video = document.querySelector(\".fridge-capture\")\r\n        let context = canvas.getContext('2d')\r\n        var image = new Image();\r\n        console.log(image)\r\n        image.onload = function() {\r\n            console.log('image loaded')\r\n            console.log(context)\r\n        context.drawImage(image, 0, 0, canvas.width, canvas.height)\r\n        }\r\n        image.src = picture;\r\n    },[])\r\n\r\n    const takePicture = _ => {\r\n        setImageTaken(true)\r\n        let canvas = document.querySelector(\".image-canvas\")\r\n        let video = document.querySelector(\".fridge-capture\")\r\n        let context = canvas.getContext('2d')\r\n        context.drawImage(video, 0, 0, canvas.width, video.videoHeight/ (video.videoWidth/canvas.width))\r\n        video.srcObject.getVideoTracks().forEach(track => {\r\n            track.stop()\r\n        })\r\n        setVideoAccess(false)\r\n        setPicture(canvas.toDataURL())\r\n    }\r\n\r\n    const sendImage = () => { \r\n        setLoader(true)\r\n        fetch('http://localhost:5000/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({image:picture.split(',')[1]})\r\n        }).then(res => {\r\n            console.log(res)\r\n            res.json().then(data =>{\r\n                data = data['info']\r\n                data = JSON.parse(data)\r\n                let ing_data = data.map(e => { return ({\"name\": e})})\r\n                receiveIngredients(ing_data)\r\n                setLoader(false)\r\n            })\r\n        }).catch(err=>{\r\n            setLoader(false)\r\n        })\r\n    }\r\n\r\n    const receiveIngredients = (ing) => {\r\n        setIngArr(ing)\r\n        setHideIngPage(false)\r\n    }\r\n\r\n    useEffect(_ => console.log(picture), [picture])\r\n\r\n    const dataURItoBlob = dataURI => {\r\n        var byteString = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n        var ab = new ArrayBuffer(byteString.length);\r\n        var ia = new Uint8Array(ab);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n        var blob = new Blob([ab], {type: mimeString});\r\n        return blob; \r\n    }\r\n\r\n    const convertFileToBlob = file => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.addEventListener(\"load\", function () {\r\n            setPicture(reader.result);\r\n          });\r\n    }\r\n\r\n    const addIng = (ingName) => {\r\n        let ingArrCopy = ingArr.slice()\r\n        ingArrCopy.push({\"name\":ingName})\r\n        setIngArr(ingArrCopy)\r\n    }\r\n\r\n    const delIng = (idx) => {\r\n        let ingArrCopy = ingArr.slice()\r\n        ingArrCopy.splice(idx, 1)\r\n        setIngArr(ingArrCopy)\r\n    }\r\n\r\n    const recipify = () => { \r\n        let ingredientsArr = ingArr.map(ing => ing.name)\r\n        let ingredientsStr = ingredientsArr.join(\",\")\r\n        fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredientsStr}&number=3&apiKey=23ff6192027a43d3b08e9efc4b0e374f`).then(response => {\r\n            response.json().then(data => {\r\n                setRecipes(JSON.parse(JSON.stringify(data)))\r\n                setHideRecipePage(false)\r\n            })\r\n        })\r\n    }\r\n\r\n    const toggleToCamera = () => {\r\n        setHideIngPage(true)\r\n        setHideRecipePage(true)\r\n        setImageTaken(false)\r\n        setIngArr([])\r\n        setPicture('')\r\n        if (!('mediaDevices' in navigator)){\r\n            navigator.mediaDevices = {}\r\n        } \r\n        // polyfill for devices that don't support the getUsermedia \r\n        if (!('getUserMedia' in navigator.mediaDevices)){\r\n            navigator.mediaDevices.getUserMedia = constraints => {\r\n                let getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia\r\n                if (!getUserMedia) {\r\n                    return Promise.reject(new Error('getUserMedia is not implemented'))\r\n                }\r\n                return new Promise((resolve, reject) => {\r\n                    getUserMedia.call(navigator, constraints, resolve, reject)\r\n                })\r\n            }\r\n        }\r\n\r\n        //set stream object to video element\r\n        navigator.mediaDevices.getUserMedia({\r\n            video: true,\r\n            audio: false\r\n        }).then(stream => {\r\n            setVideoAccess(true)\r\n            let video = document.querySelector(\".fridge-capture\")\r\n            video.srcObject = stream\r\n            video.addEventListener('loadedmetadata', () => {\r\n                video.play()\r\n            })\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (picture){\r\n        let canvas = document.querySelector(\".image-canvas\")\r\n            // let video = document.querySelector(\".fridge-capture\")\r\n        let context = canvas.getContext('2d')\r\n        var image = new Image();\r\n        console.log(image)\r\n        image.onload = function() {\r\n            console.log('image loaded')\r\n            console.log(context)\r\n            context.drawImage(image, 0, 0, canvas.width, canvas.height)\r\n        };\r\n            \r\n        image.src = picture;\r\n        setImageTaken(true)\r\n    }\r\n    }, [picture])\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            <div className=\"capture-screen container\">\r\n                <div className=\"capture-screen-prompt\">Take a picture of your fridge :D</div>\r\n                {hasVideoAccess && !picture ? <video className=\"fridge-capture\"/> : isImageTaken ? \"\" : <div className=\"no-video-access\">No camera access</div>}\r\n                <canvas className={`image-canvas ${isImageTaken ? \"\": \"hidden\"}`} width=\"320px\" height=\"240px\"/>\r\n                <button className=\"capture-btn\" onClick={takePicture} disabled={isImageTaken||!hasVideoAccess ? true:false}>\r\n                    <FontAwesomeIcon icon={faCamera}/>\r\n                </button>\r\n                <div className=\"buttons-container\">\r\n                <div className=\"image-picker\">\r\n                    <input ref={fileReader} onChange={e=>{\r\n                        convertFileToBlob(fileReader.current.files[0])\r\n                    }} className=\"image-select\" type=\"file\" accept=\"image/*\"></input>\r\n                </div>\r\n                    <button className=\"get-ingredients-btn\" onClick={sendImage}> \r\n                        Analyze Picture\r\n                    </button>\r\n                    <button className=\"edit-ingredients-btn\" onClick={()=>setHideIngPage(false)}>customize ingredients</button>                \r\n                </div>\r\n            </div>\r\n            <GenerateRecipePage recipify={recipify} setHideIngPage={setHideIngPage} isHidden={hideIngPage} ingArr={ingArr} addIng={addIng} delIng={delIng}/>\r\n            {hideRecipePage ? '':<RecipePage toggleToCamera={toggleToCamera} recipes={recipes}/>}\r\n            {loader? <Loader/> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CaptureScreen","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\loginPage\\loginPage.jsx",["58","59","60","61","62"],"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\landingPage\\landingPage.jsx",[],"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\generateRecipePage\\generateRecipePage.jsx",[],"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\components\\ingredient\\ingredient.jsx",[],"C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\pages\\recipesPage\\recipesPage.jsx",["63","64"],"import React from \"react\"\r\n\r\nimport './recipesPage.styles.scss'\r\n\r\nimport { \r\n    Link\r\n  } from \"react-router-dom\"\r\n  \r\n\r\nconst RecipesPage = (props) => {\r\n    console.log(props.recipes)\r\n    return(\r\n        <div className=\"recipe-page page\">\r\n            <div className=\"recipe-container\"> \r\n                <div className=\"recipe-images-container\">\r\n                    {props.recipes.map(el => {\r\n                        console.log(props.recipes)\r\n                        return(\r\n                            <div className=\"recipe\">  \r\n                                <div className=\"recipe-title\">{el.title}</div>\r\n                                <img className=\"recipe-image\" src={el.image}></img>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <button onClick={props.toggleToCamera} className=\"retake-img-btn\">Take another picture</button> \r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipesPage\r\n","C:\\Users\\65945\\Documents\\Competitions\\Hack_The_North\\final\\recipeGo\\frontend\\src\\components\\loader\\loader.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":35},{"ruleId":"69","severity":1,"message":"74","line":14,"column":8,"nodeType":"71","messageId":"72","endLine":14,"endColumn":19},{"ruleId":"69","severity":1,"message":"75","line":15,"column":8,"nodeType":"71","messageId":"72","endLine":15,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":68,"column":7,"nodeType":"78","endLine":68,"endColumn":9,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":112,"column":11,"nodeType":"71","messageId":"72","endLine":112,"endColumn":24},{"ruleId":"69","severity":1,"message":"81","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":23},{"ruleId":"69","severity":1,"message":"70","line":1,"column":25,"nodeType":"71","messageId":"72","endLine":1,"endColumn":34},{"ruleId":"69","severity":1,"message":"73","line":1,"column":36,"nodeType":"71","messageId":"72","endLine":1,"endColumn":44},{"ruleId":"82","severity":1,"message":"83","line":57,"column":9,"nodeType":"84","messageId":"85","endLine":57,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":78,"column":9,"nodeType":"84","messageId":"85","endLine":78,"endColumn":14},{"ruleId":"69","severity":1,"message":"86","line":6,"column":5,"nodeType":"71","messageId":"72","endLine":6,"endColumn":9},{"ruleId":"87","severity":1,"message":"88","line":21,"column":33,"nodeType":"89","endLine":21,"endColumn":78},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'LandingPage' is defined but never used.","'RecipesPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'picture'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'dataURItoBlob' is assigned a value but never used.","'useRef' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [picture]",{"range":"95","text":"96"},[2693,2695],"[picture]"]